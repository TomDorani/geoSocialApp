[{"D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\index.js":"1","D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\reportWebVitals.js":"2","D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\App.js":"3","D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\Components\\Main.js":"4","D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\Components\\Toggle.js":"5","D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\Components\\Map.js":"6","D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\Components\\Markers.js":"7","D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\Components\\Table.js":"8","D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\Components\\Bars.js":"9","D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\Components\\TestMap.js":"10","C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\index.js":"11","C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\App.js":"12","C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\reportWebVitals.js":"13","C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Components\\Main.js":"14","C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Components\\TestMap.js":"15","C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Components\\Table.js":"16","C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Components\\Toggle.js":"17","C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Components\\Markers.js":"18","C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Statistics\\Country.js":"19","C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Statistics\\Topics.js":"20","C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Statistics\\Sentimental.js":"21","C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Components\\Accordion.js":"22","C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Components\\Loader.js":"23"},{"size":513,"mtime":1618927026905,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":270,"mtime":1618927060699,"results":"27","hashOfConfig":"25"},{"size":10742,"mtime":1618926211296,"results":"28","hashOfConfig":"25"},{"size":1133,"mtime":1617708048710,"results":"29","hashOfConfig":"25"},{"size":3710,"mtime":1618926151105,"results":"30","hashOfConfig":"25"},{"size":1025,"mtime":1617708048705,"results":"31","hashOfConfig":"25"},{"size":1938,"mtime":1616668440845,"results":"32","hashOfConfig":"25"},{"size":0,"mtime":1617708048693,"results":"33","hashOfConfig":"25"},{"size":1470,"mtime":1619020173605,"results":"34","hashOfConfig":"25"},{"size":513,"mtime":1619020622136,"results":"35","hashOfConfig":"36"},{"size":270,"mtime":1619020622055,"results":"37","hashOfConfig":"36"},{"size":375,"mtime":1615890246075,"results":"38","hashOfConfig":"36"},{"size":10602,"mtime":1622364792950,"results":"39","hashOfConfig":"36"},{"size":2227,"mtime":1621931874489,"results":"40","hashOfConfig":"36"},{"size":1938,"mtime":1616668384068,"results":"41","hashOfConfig":"36"},{"size":1133,"mtime":1617707965913,"results":"42","hashOfConfig":"36"},{"size":6895,"mtime":1622638955040,"results":"43","hashOfConfig":"36"},{"size":3134,"mtime":1622369644709,"results":"44","hashOfConfig":"36"},{"size":3073,"mtime":1622360025325,"results":"45","hashOfConfig":"36"},{"size":4122,"mtime":1622368797752,"results":"46","hashOfConfig":"36"},{"size":2327,"mtime":1622364804126,"results":"47","hashOfConfig":"36"},{"size":876,"mtime":1621931874458,"results":"48","hashOfConfig":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"1szvtiu",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"umbc6d",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"75"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"75"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\index.js",[],["103","104"],"D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\reportWebVitals.js",[],"D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\App.js",[],"D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\Components\\Main.js",["105","106"],"import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\r\nimport ToggleButtons from \"./Toggle\";\r\nimport \"../CSS/Drawer.css\";\r\n// import { Map } from \"./Map\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport BasicTable from \"./Table\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TestMap from \"./TestMap\";\r\nconst drawerWidth = \"50vmin\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: \"flex\",\r\n\t},\r\n\tappBar: {\r\n\t\ttransition: theme.transitions.create([\"margin\", \"width\"], {\r\n\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\tduration: theme.transitions.duration.leavingScreen,\r\n\t\t}),\r\n\t},\r\n\tappBarShift: {\r\n\t\twidth: `calc(100% - ${drawerWidth}px)`,\r\n\t\tmarginLeft: drawerWidth,\r\n\t\ttransition: theme.transitions.create([\"margin\", \"width\"], {\r\n\t\t\teasing: theme.transitions.easing.easeOut,\r\n\t\t\tduration: theme.transitions.duration.enteringScreen,\r\n\t\t}),\r\n\t},\r\n\tmenuButton: {\r\n\t\tmarginRight: theme.spacing(2),\r\n\t},\r\n\thide: {\r\n\t\tdisplay: \"none\",\r\n\t},\r\n\tdrawer: {\r\n\t\twidth: drawerWidth,\r\n\t\tflexShrink: 0,\r\n\t},\r\n\tdrawerPaper: {\r\n\t\twidth: drawerWidth,\r\n\t},\r\n\tdrawerHeader: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\r\n\t\tpadding: theme.spacing(0, 1),\r\n\t\t// necessary for content to be below app bar\r\n\t\t...theme.mixins.toolbar,\r\n\t\tjustifyContent: \"flex-end\",\r\n\t},\r\n\tcontent: {\r\n\t\tflexGrow: 1,\r\n\t\t// padding: theme.spacing(3),\r\n\t\ttransition: theme.transitions.create(\"margin\", {\r\n\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\tduration: theme.transitions.duration.leavingScreen,\r\n\t\t}),\r\n\t},\r\n\tcontentShift: {\r\n\t\ttransition: theme.transitions.create(\"margin\", {\r\n\t\t\teasing: theme.transitions.easing.easeOut,\r\n\t\t\tduration: theme.transitions.duration.enteringScreen,\r\n\t\t}),\r\n\t\tmarginLeft: 0,\r\n\t},\r\n}));\r\n\r\nfunction getModalStyle() {\r\n\tconst top = 50;\r\n\tconst left = 50;\r\n\r\n\treturn {\r\n\t\ttop: `${top}%`,\r\n\t\tleft: `${left}%`,\r\n\t\ttransform: `translate(-${top}%, -${left}%)`,\r\n\t};\r\n}\r\n\r\nexport default function PersistentDrawerLeft() {\r\n\tconst [state, setState] = useState({\r\n\t\tcheckedA: false,\r\n\t\tcheckedB: false,\r\n\t\t// allTweets : [],\r\n\t\t// relevantTweets : [],\r\n\t});\r\n\tconst [search, setSearch] = useState([]);\r\n\tconst theme = useTheme();\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [modalIsOpen, setModalIsOpen] = useState(false);\r\n\tconst [modalStyle] = useState(getModalStyle);\r\n\tconst [keyWords, setKeywords] = useState();\r\n\r\n\tconst [contactUsIsOpen, setContactUsIsOpen] = useState(false);\r\n\r\n\tconst handleModalOpen = () => {\r\n\t\tsetModalIsOpen(true);\r\n\t\tconsole.log(\"open\");\r\n\t};\r\n\r\n\tconst handleModalClose = () => {\r\n\t\tsetModalIsOpen(false);\r\n\t};\r\n\r\n\tconst contactUsOpen = () => {\r\n\t\tconsole.log(\"Contact Us\");\r\n\t\tsetContactUsIsOpen(true);\r\n\t};\r\n\r\n\tconst contactUsClose = () => {\r\n\t\tconsole.log(\"Contact Us\");\r\n\t\tsetContactUsIsOpen(false);\r\n\t};\r\n\r\n\tconst useStyles = makeStyles((theme) => ({\r\n\t\tpaper: {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\twidth: 1100,\r\n\t\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\t\tborder: \"2px solid #000\",\r\n\t\t\tboxShadow: theme.shadows[5],\r\n\t\t\tpadding: theme.spacing(3, 4, 3),\r\n\t\t},\r\n\t}));\r\n\r\n\tconst classes = useStyles();\r\n\r\n\tconst body = (\r\n\t\t<div style={modalStyle} className={classes.paper}>\r\n\t\t\t<h2 id=\"simple-modal-title\">Statistics</h2>\r\n\t\t\t<BasicTable />\r\n\t\t</div>\r\n\t);\r\n\r\n\tconst contactUsBody = (\r\n\t\t<div style={modalStyle} className={classes.paper}>\r\n\t\t\t<h2 id=\"contact-us-title\">Contact Us</h2>\r\n\t\t\t<TextField id=\"outlined-basic\" label=\"Subject\" />\r\n\t\t\t<h4 id=\"contact-us-text-title\">\r\n\t\t\t\tPlease provide a brief description of your issue.\r\n\t\t\t</h4>\r\n\r\n\t\t\t<TextField\r\n\t\t\t\tid=\"outlined-multiline-static\"\r\n\t\t\t\tmultiline\r\n\t\t\t\trows={4}\r\n\t\t\t\tlable=\"Brief Description\"\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tstyle={{ paddingRight: \"60%\" }}\r\n\t\t\t/>\r\n\t\t\t<div>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tsize=\"medium\"\r\n\t\t\t\t\tcolor=\"black\"\r\n\t\t\t\t\tstyle={{ marginLeft: \"90%\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\tSubmit\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\tconst checkSearch = (event) => {\r\n\t\t// if (keyWords.length() == 0) {\r\n\t\t// \tsetKeywords(null);\r\n\t\t// }\r\n\t\tlet words = keyWords.split(\" \");\r\n\t\tconsole.log(\"key,words:\", keyWords, words);\r\n\t\tsetSearch(words);\r\n\t\tconsole.log(\"checksearch:\", search);\r\n\t\t// for(let tweet of state.allTweets){\r\n\t\t//   count = 0;\r\n\t\t//   for(let word of words){\r\n\t\t//     tweet.text = \" \" + tweet.text + \" \";\r\n\t\t//     var flag = tweet.text.includes(\" \" +word+ \" \");\r\n\t\t//     if(flag == true){\r\n\t\t//       count +=1;\r\n\t\t//       break;\r\n\t\t//     }\r\n\r\n\t\t//   }\r\n\t\t// console.log(count);\r\n\t\t// console.log(words.length / 2);\r\n\t\t// if(count >= words.length/2){\r\n\t\t//   state.relevantTweets.push(tweet);\r\n\t\t//   }\r\n\r\n\t\t// }\r\n\t\t// console.log(state);\r\n\t};\r\n\r\n\tconst handleDrawerOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n\tconst handleDrawerClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tstate.relevantTweets = [];\r\n\r\n\t\t// state.allTweets = [\r\n\t\t// \t{\r\n\t\t// \t\tHeight: 0,\r\n\t\t// \t\tWidth: 0,\r\n\t\t// \t\ttext: \"fa fa bi fa ti na mi\",\r\n\t\t// \t\tcoordinates: [-79.9372, 32.7872],\r\n\t\t// \t},\r\n\t\t// \t{\r\n\t\t// \t\tHeight: 0,\r\n\t\t// \t\tWidth: 0,\r\n\t\t// \t\ttext: \"fa fa bi fa ti na mi\",\r\n\t\t// \t\tcoordinates: [-78.9372, 33.7872],\r\n\t\t// \t},\r\n\t\t// ];\r\n\t\t// console.log(\"here\");\r\n\t\t// var cluster = L.markerClusterGroup();\r\n\t\tsetState({ ...state, [event.target.name]: event.target.checked });\r\n\t\t// for (let tweet of state.allTweets) {\r\n\t\t// \tcluster.addLayer(L.marker(tweet.coordinates));\r\n\t\t// }\r\n\r\n\t\t// state.cluster = cluster;\r\n\t};\r\n\r\n\tconst m = [\r\n\t\t{\r\n\t\t\tlat: 51.505,\r\n\t\t\tlng: -0.09,\r\n\t\t\tzoom: 1,\r\n\t\t\tzoomOffset: 1,\r\n\t\t},\r\n\t\t{\r\n\t\t\tlat: 20.505,\r\n\t\t\tlng: -0.09,\r\n\t\t\tzoom: 1,\r\n\t\t\tzoomOffset: 1,\r\n\t\t},\r\n\t];\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<AppBar\r\n\t\t\t\tposition=\"fixed\"\r\n\t\t\t\tclassName={clsx(classes.appBar, {\r\n\t\t\t\t\t[classes.appBarShift]: open,\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\taria-label=\"open drawer\"\r\n\t\t\t\t\t\tonClick={handleDrawerOpen}\r\n\t\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\t\tclassName={clsx(classes.menuButton, open && classes.hide)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<Typography variant=\"h6\" noWrap>\r\n\t\t\t\t\t\tGeo Tweet\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t\t<Drawer\r\n\t\t\t\tanchor=\"left\"\r\n\t\t\t\topen={open}\r\n\t\t\t\tclasses={{\r\n\t\t\t\t\tpaper: classes.drawerPaper,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"DrawerHeader\">\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\tnoWrap\r\n\t\t\t\t\t\tstyle={{ padding: \"25px\", marginInlineEnd: \"45%\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tGeo Tweet\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<div className=\"DrawerButton\">\r\n\t\t\t\t\t\t<IconButton onClick={handleDrawerClose} style={{ color: \"white\" }}>\r\n\t\t\t\t\t\t\t{theme.direction === \"ltr\" ? (\r\n\t\t\t\t\t\t\t\t<ChevronLeftIcon />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<ChevronRightIcon />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Divider />\r\n\t\t\t\t<List>\r\n\t\t\t\t\t<Container maxWidth=\"sm\">\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\tclassName=\"layer\"\r\n\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\tdirection=\"column\"\r\n\t\t\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\t\t\talignItems=\"flex-start\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Grid item direction=\"row\">\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tid=\"standard-basic\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"KeyWords\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\tsetKeywords(e.target.value);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\t\t\tcheckSearch(e);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tSearch\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<FormGroup className=\"switch\">\r\n\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\t\t\tchecked={state.checkedA}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"checkedA\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tlabel=\"Cluster Layer\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\t\t\tchecked={state.checkedB}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"checkedB\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tlabel=\"Heatmap Layer\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<FormControl component=\"fieldset\">\r\n\t\t\t\t\t\t\t<FormLabel component=\"legend\">View</FormLabel>\r\n\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t<div className=\"gap\">\r\n\t\t\t\t\t\t\t\t<ToggleButtons></ToggleButtons>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</List>\r\n\t\t\t\t<Divider />\r\n\t\t\t\t<List>\r\n\t\t\t\t\t<ListItem button key={\"Show Statistics\"} onClick={handleModalOpen}>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<EqualizerIcon />\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText primary={\"Show Statistics\"} />\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t<ListItem button key={\"Contact Us\"} onClick={contactUsOpen}>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<MailIcon />\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText primary={\"Contact Us\"} />\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t</List>\r\n\t\t\t</Drawer>\r\n\t\t\t<main\r\n\t\t\t\tclassName={clsx(classes.content, {\r\n\t\t\t\t\t[classes.contentShift]: open,\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t<div className={classes.drawerHeader} style={{ marginTop: \"4%\" }} />\r\n\t\t\t\t{/* <Map search={search} /> */}\r\n\t\t\t\t<TestMap />\r\n\t\t\t</main>\r\n\r\n\t\t\t<Modal\r\n\t\t\t\tid=\"modal\"\r\n\t\t\t\topen={modalIsOpen}\r\n\t\t\t\tonClose={handleModalClose}\r\n\t\t\t\t// aria-labelledby=\"simple-modal-title\"\r\n\t\t\t\t// aria-describedby=\"simple-modal-description\"\r\n\t\t\t>\r\n\t\t\t\t{body}\r\n\t\t\t</Modal>\r\n\r\n\t\t\t<Modal\r\n\t\t\t\tid=\"contactUsModal\"\r\n\t\t\t\topen={contactUsIsOpen}\r\n\t\t\t\tonClose={contactUsClose}\r\n\t\t\t\t// aria-labelledby=\"simple-modal-title\"\r\n\t\t\t\t// aria-describedby=\"simple-modal-description\"\r\n\t\t\t>\r\n\t\t\t\t{contactUsBody}\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n}\r\n","D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\Components\\Toggle.js",[],"D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\Components\\Map.js",[],"D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\Components\\Markers.js",["107","108","109"],"import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport {Marker, Popup} from 'react-leaflet'\r\n\r\n  // const latRef = useRef(null);\r\n  // const LngRef = useRef(null);\r\n  // const zoomRef = useRef(null);\r\n  // const zoomOffRef = useRef(null);\r\n\r\n\r\n  // function createMarker(item) {\r\n  //   latRef.current = item.lat;\r\n  //   LngRef.current = item.lng;\r\n  //   zoomRef.current = item.zoom;\r\n  //   zoomOffRef.current = item.zoomOffset;\r\n  // }\r\nconst EventsCreator = (state) => {\r\n  const markers = state.markersArr.map((item) => {\r\n    if(item.coordinates){\r\n    const position = [item.coordinates[1], item.coordinates[0]]\r\n    const text=`\"`+ item.text +`\"`\r\n    const authur=item.author+\" says:\"\r\n\r\n    return (\r\n\r\n      <Marker position={position}>\r\n      <Popup>\r\n       {authur}\r\n          <br/>\r\n          {text}\r\n      </Popup>\r\n      </Marker>\r\n    )}\r\n  })\r\n\r\n  return(\r\n    <div>\r\n      {markers}\r\n    </div>\r\n  )\r\n\r\n\r\n}\r\n\r\nexport default EventsCreator;\r\n",["110","111"],"D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\Components\\Table.js",[],"D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\Components\\Bars.js",[],"D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\Components\\TestMap.js",["112","113"],"C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\index.js",[],["114","115"],"C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\App.js",[],"C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Components\\Main.js",[],"C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Components\\TestMap.js",["116","117","118","119"],"import React, { useState, useEffect } from \"react\";\r\nimport { Map, TileLayer } from \"react-leaflet\";\r\nimport Markers from \"./Markers\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst TestMap = (state) => {\r\n\tconst [zoom, setZoom] = useState(3);\r\n\tconst [isload, setIsLoad] = useState(true);\r\n\tconst [tweets, setTweets] = useState([]);\r\n\tconst [hight, setHight] = useState(window.innerHeight);\r\n\tconst [width, setWitdh] = useState(window.innerWidth);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst updateWindowDimensions = () => {\r\n\t\t\tlet newHeight = window.innerHeight;\r\n\t\t\tlet newidth = window.innerWidth;\r\n\t\t\tsetHight(newHeight);\r\n\t\t\tsetWitdh(newidth);\r\n\t\t\tconsole.log(\"updating size\");\r\n\t\t};\r\n\r\n\t\twindow.addEventListener(\"resize\", updateWindowDimensions);\r\n\r\n\t\treturn () => window.removeEventListener(\"resize\", updateWindowDimensions);\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst bringTweets = async () => {\r\n\t\t\tconst res = await fetch(`https://ancient-retreat-48472.herokuapp.com/`);\r\n\t\t\tconst data = await res.json();\r\n\t\t\tconsole.log(\"data:\", data);\r\n\r\n\t\t\tsetTweets(data);\r\n\t\t\tsetIsLoad(false);\r\n\t\t};\r\n\t\tbringTweets();\r\n\r\n\t\tconsole.log(tweets);\r\n\t\tconsole.log(tweets[0]);\r\n\t}, [tweets]);\r\n\r\n\tconsole.log(\"zoom \", zoom);\r\n\r\n\tif (isload) {\r\n\t\treturn <Loader loading={isload} />;\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div\r\n\t\t\t\t\tid=\"mapdiv\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tpaddingBottom: \"50%\",\r\n\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Map\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\theight: hight * 0.99,\r\n\t\t\t\t\t\t\twidth: width * 0.99,\r\n\t\t\t\t\t\t\tpaddingTop: \"10%\",\r\n\t\t\t\t\t\t\tposition: \"initial\",\r\n\t\t\t\t\t\t\toutline: \"auto\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tpreferCanvas={true}\r\n\t\t\t\t\t\tzoom={3}\r\n\t\t\t\t\t\tzoomOffset={4}\r\n\t\t\t\t\t\tmaxZoom={17}\r\n\t\t\t\t\t\tminZoom={3}\r\n\t\t\t\t\t\tcenter={[-37.814, 144.96332]}\r\n\t\t\t\t\t\tonZoomEnd={(e) => {\r\n\t\t\t\t\t\t\tsetZoom(e.target._zoom);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t// Other map props...\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<TileLayer\r\n\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> '\r\n\t\t\t\t\t\t\turl=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<Markers\r\n\t\t\t\t\t\t\tmarkersArr={tweets}\r\n\t\t\t\t\t\t\tsearch={state.search}\r\n\t\t\t\t\t\t\tzoom={zoom}\r\n\t\t\t\t\t\t\theatMap={state.heatMap}\r\n\t\t\t\t\t\t></Markers>\r\n\t\t\t\t\t</Map>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n};\r\nexport default TestMap;\r\n","C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Components\\Table.js",[],["120","121"],"C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Components\\Toggle.js",[],"C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Components\\Markers.js",[],"C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Statistics\\Country.js",["122"],"import React from \"react\";\r\nimport { VictoryBar, VictoryChart } from \"victory\";\r\nimport Sent from \"./Sentimental\";\r\nimport \"../CSS/Drawer.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\n\r\nconst countries = [];\r\n\r\nclass Country extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tclicked: false,\r\n\t\t\tcountries: [],\r\n\t\t\tbar: \"\",\r\n\t\t\tstyle: {\r\n\t\t\t\tdata: { fill: \"tomato\" },\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch(\r\n\t\t\t`https://ancient-retreat-48472.herokuapp.com/api/country?search=${this.props.search}`\r\n\t\t)\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.setState({ countries: res });\r\n\t\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst clicked = (e) => {\r\n\t\t\tconsole.log(\"hey click\", e);\r\n\t\t\tconsole.log(\"bar\", e.datum.x);\r\n\t\t\tthis.setState({ clicked: true });\r\n\t\t\tthis.setState({\r\n\t\t\t\tbar: e.datum.x,\r\n\t\t\t});\r\n\r\n\t\t\tthis.forceUpdate();\r\n\t\t};\r\n\r\n\t\tconst handleChange = (panel) => (event, isExpanded) => {\r\n\t\t\tthis.setState({ clicked: false });\r\n\t\t\tthis.forceUpdate();\r\n\t\t};\r\n\r\n\t\tif (this.state.clicked === false && this.state.countries[0]) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"chart\">\r\n\t\t\t\t\t<VictoryChart\r\n\t\t\t\t\t\tdomainPadding={30}\r\n\t\t\t\t\t\tpadding={{ left: 80, right: 100, bottom: 50, top: 20 }}\r\n\t\t\t\t\t\theight={385}\r\n\t\t\t\t\t\twidth={550}\r\n\t\t\t\t\t\tlabels = {{fontSize : 30}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<VictoryBar\r\n\t\t\t\t\t\t\tstyle={{ labels: { fontSize: 30, fill: \"black\" } }}\r\n\t\t\t\t\t\t\tcornerRadius={{ topLeft: 10 }}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\t\tfill: \"#1da1f2\",\r\n\t\t\t\t\t\t\t\t\twidth: 25,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tcategories={{\r\n\t\t\t\t\t\t\t\tx: countries,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tdata={[\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tx: this.state.countries[0][0],\r\n\t\t\t\t\t\t\t\t\ty: this.state.countries[0][1],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tx: this.state.countries[1][0],\r\n\t\t\t\t\t\t\t\t\ty: this.state.countries[1][1],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tx: this.state.countries[2][0],\r\n\t\t\t\t\t\t\t\t\ty: this.state.countries[2][1],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tx: this.state.countries[3][0],\r\n\t\t\t\t\t\t\t\t\ty: this.state.countries[3][1],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tx: this.state.countries[4][0],\r\n\t\t\t\t\t\t\t\t\ty: this.state.countries[4][1],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\tevents={[\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttarget: \"data\",\r\n\t\t\t\t\t\t\t\t\teventHandlers: {\r\n\t\t\t\t\t\t\t\t\t\tonClick: (e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t// clicked(e);\r\n                      return [{\r\n                        target: \"data\",\r\n                        mutation: (props) => {\r\n                          clicked(props);\r\n                        }\r\n                      }];\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</VictoryChart>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\t// this.setState({ clicked: false });\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"sntBtn\">\r\n\t\t\t\t\t\t<IconButton onClick={handleChange()} style={{ color: \"grey\" }}>\r\n\t\t\t\t\t\t\t<ChevronLeftIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Sent\r\n\t\t\t\t\t\tclassName=\"sentGraph\"\r\n\t\t\t\t\t\tsearch={this.props.search}\r\n\t\t\t\t\t\tcountry={this.state.bar}\r\n\t\t\t\t\t\tflag=\"country\"\r\n\t\t\t\t\t></Sent>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Country;\r\n","C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Statistics\\Topics.js",[],"C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Statistics\\Sentimental.js",[],"C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Components\\Accordion.js",[],"C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Components\\Loader.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":37,"column":7,"nodeType":"129","messageId":"130","endLine":37,"endColumn":16},{"ruleId":"127","severity":1,"message":"131","line":253,"column":8,"nodeType":"129","messageId":"130","endLine":253,"endColumn":9},{"ruleId":"127","severity":1,"message":"132","line":1,"column":10,"nodeType":"129","messageId":"130","endLine":1,"endColumn":20},{"ruleId":"127","severity":1,"message":"133","line":3,"column":8,"nodeType":"129","messageId":"130","endLine":3,"endColumn":16},{"ruleId":"134","severity":1,"message":"135","line":19,"column":47,"nodeType":"136","messageId":"137","endLine":19,"endColumn":49},{"ruleId":"123","replacedBy":"138"},{"ruleId":"125","replacedBy":"139"},{"ruleId":"127","severity":1,"message":"140","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},{"ruleId":"127","severity":1,"message":"141","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":36},{"ruleId":"123","replacedBy":"142"},{"ruleId":"125","replacedBy":"143"},{"ruleId":"127","severity":1,"message":"144","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":19},{"ruleId":"127","severity":1,"message":"145","line":6,"column":8,"nodeType":"129","messageId":"130","endLine":6,"endColumn":20},{"ruleId":"146","severity":1,"message":"147","line":39,"column":6,"nodeType":"148","endLine":39,"endColumn":8,"suggestions":"149"},{"ruleId":"127","severity":1,"message":"150","line":45,"column":8,"nodeType":"129","messageId":"130","endLine":45,"endColumn":15},{"ruleId":"123","replacedBy":"151"},{"ruleId":"125","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":64,"column":8,"nodeType":"155","endLine":69,"endColumn":10},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"no-unused-vars","'useStyles' is assigned a value but never used.","Identifier","unusedVar","'m' is assigned a value but never used.","'Typography' is defined but never used.","'ReactDOM' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["156"],["157"],"'useState' is defined but never used.","'useEffect' is defined but never used.",["156"],["157"],"'PixiOverlay' is defined but never used.","'HeatmapLayer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tweets'. Either include it or remove the dependency array.","ArrayExpression",["158"],"'markers' is assigned a value but never used.",["156"],["157"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},"Update the dependencies array to be: [tweets]",{"range":"161","text":"162"},[886,888],"[tweets]"]