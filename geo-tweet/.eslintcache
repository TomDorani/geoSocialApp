[{"D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\index.js":"1","D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\reportWebVitals.js":"2","D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\App.js":"3","D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\Components\\Main.js":"4","D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\Components\\Toggle.js":"5","D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\Components\\Map.js":"6","D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\Components\\Markers.js":"7","C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\index.js":"8","C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\reportWebVitals.js":"9","C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\App.js":"10","C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Components\\Main.js":"11","C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Components\\Map.js":"12","C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Components\\Toggle.js":"13","C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Components\\Table.js":"14","C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Components\\Bars.js":"15","C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Components\\Markers.js":"16"},{"size":525,"mtime":1610988032661,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":360,"mtime":1611134288007,"results":"20","hashOfConfig":"18"},{"size":6926,"mtime":1611162959450,"results":"21","hashOfConfig":"18"},{"size":1066,"mtime":1611052274160,"results":"22","hashOfConfig":"18"},{"size":1958,"mtime":1611168624185,"results":"23","hashOfConfig":"18"},{"size":1147,"mtime":1611165377821,"results":"24","hashOfConfig":"18"},{"size":525,"mtime":1615890246074,"results":"25","hashOfConfig":"26"},{"size":375,"mtime":1615890246075,"results":"27","hashOfConfig":"26"},{"size":360,"mtime":1615890246071,"results":"28","hashOfConfig":"26"},{"size":11565,"mtime":1617707965889,"results":"29","hashOfConfig":"26"},{"size":2675,"mtime":1617707965909,"results":"30","hashOfConfig":"26"},{"size":1133,"mtime":1617707965913,"results":"31","hashOfConfig":"26"},{"size":1938,"mtime":1616668384068,"results":"32","hashOfConfig":"26"},{"size":0,"mtime":1617707965879,"results":"33","hashOfConfig":"26"},{"size":1025,"mtime":1617707965912,"results":"34","hashOfConfig":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1szvtiu",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"umbc6d",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"51"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"51"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},"D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\index.js",[],"D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\reportWebVitals.js",[],"D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\App.js",["72"],"D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\Components\\Main.js",["73","74","75"],"D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\Components\\Toggle.js",[],"D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\Components\\Map.js",["76","77","78"],"D:\\GeoTweet\\geoSocialApp\\geo-tweet\\src\\Components\\Markers.js",["79","80","81"],"C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\index.js",[],["82","83"],"C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\App.js",["84"],"\r\nimport './App.css';\r\nimport Dash from \"./Components/Main.js\";\r\nimport {Map} from \"./Components/Map\"\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <header className=\"App-header\">  \r\n          <h1>Geo Tweet</h1>\r\n          </header> */}\r\n          <Dash/>\r\n          \r\n           </div>\r\n      \r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Components\\Main.js",["85","86","87","88","89","90","91"],"\r\nimport React,{useState,useEffect ,useRef} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport ToggleButtons from \"./Toggle\"\r\nimport '../CSS/Drawer.css'\r\nimport {Map } from \"./Map\"\r\nimport { Marker } from 'react-leaflet';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport BasicTable from './Table'\r\nimport Button from '@material-ui/core/Button';\r\nimport Bars from \"./Bars\";\r\nimport L from 'leaflet';\r\nimport \"leaflet.markercluster\";\r\n\r\n\r\n\r\n\r\nconst drawerWidth = \"50vmin\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    \r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    // padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    \r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  \r\n}));\r\n\r\n\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nexport default function PersistentDrawerLeft() {\r\nconst [state, setState] = useState({\r\n  Search : '',\r\n  checkedA: false,\r\n  checkedB: false,\r\n  allTweets : [],\r\n  relevantTweets : [],\r\n});\r\n\r\n  const theme = useTheme();\r\n  const [open, setOpen] = useState(false);\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  \r\n  const [contactUsIsOpen, setContactUsIsOpen] = useState(false);\r\n\r\n\r\n  const handleModalOpen = () => {\r\n\r\n    setModalIsOpen(true);\r\n    console.log(\"open\")\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setModalIsOpen(false);\r\n  };\r\n\r\n  const contactUsOpen = () => {\r\n    console.log(\"Contact Us\")\r\n    setContactUsIsOpen(true)\r\n\r\n  };\r\n\r\n  const contactUsClose = () => {\r\n    console.log(\"Contact Us\")\r\n    setContactUsIsOpen(false)\r\n\r\n  };\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 1100,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(3, 4, 3),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper} >\r\n      <h2 id=\"simple-modal-title\">Statistics</h2>\r\n      <BasicTable/>\r\n    </div>\r\n  );\r\n\r\n  const contactUsBody = (\r\n    <div style={modalStyle} className={classes.paper} >\r\n      <h2 id=\"contact-us-title\">Contact Us</h2>\r\n       <TextField id=\"outlined-basic\" label=\"Subject\" />\r\n      <h4 id=\"contact-us-text-title\">Please provide a brief description of your issue.</h4>\r\n\r\n      <TextField\r\n          id=\"outlined-multiline-static\"\r\n          multiline\r\n          rows={4}\r\n          lable=\"Brief Description\"\r\n          variant=\"outlined\"\r\n          style = {{paddingRight: '60%'}}\r\n          \r\n        />\r\n        <div>\r\n        <Button variant=\"outlined\" size=\"medium\" color=\"black\" style = {{marginLeft : '90%' }}>\r\n          Submit\r\n        </Button>\r\n        </div>\r\n\r\n\r\n    </div>\r\n  );\r\n\r\n\r\n  \r\n  const checkSearch = (event) => {\r\n\r\n    state.relevantTweets =[];\r\n\r\n    state.allTweets = [\r\n      {\r\n        Height : 0, \r\n        Width : 0,\r\n        text : 'fa fa bi fa ti na mi',\r\n        coordinates : [-79.9372, 32.7872] , \r\n\r\n      },\r\n      {\r\n        Height : 0, \r\n        Width : 0,\r\n        text : 'fa fa bi fa ti na mi',\r\n        coordinates : [-78.9372, 33.7872] , \r\n\r\n      }\r\n  ]\r\n\r\n    let count = 0;\r\n    var words = event.target.value;\r\n    words = words.split(\" \")\r\n    console.log(words);\r\n    for(let tweet of state.allTweets){\r\n      count = 0;\r\n      for(let word of words){\r\n        tweet.text = \" \" + tweet.text + \" \";\r\n        var flag = tweet.text.includes(\" \" +word+ \" \");\r\n        if(flag == true){\r\n          count +=1;\r\n          break;\r\n        }\r\n        \r\n      }\r\n      console.log(count);\r\n      console.log(words.length/2);\r\n      if(count >= words.length/2){\r\n        state.relevantTweets.push(tweet);\r\n      }\r\n\r\n    }\r\n    console.log(state);\r\n  }\r\n\r\n \r\n\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    state.relevantTweets =[];\r\n\r\n    state.allTweets = [\r\n      {\r\n        Height : 0, \r\n        Width : 0,\r\n        text : 'fa fa bi fa ti na mi',\r\n        coordinates : [-79.9372, 32.7872] , \r\n\r\n      },\r\n      {\r\n        Height : 0, \r\n        Width : 0,\r\n        text : 'fa fa bi fa ti na mi',\r\n        coordinates : [-78.9372, 33.7872] , \r\n\r\n      }\r\n  ]\r\n    console.log(\"here\");\r\n    var cluster = L.markerClusterGroup();\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n    for(let tweet of state.allTweets){\r\n      cluster.addLayer(L.marker(tweet.coordinates));\r\n    }\r\n\r\n    console.log(cluster);\r\n    state.cluster = cluster;\r\n\r\n  };\r\n\r\n\r\n  \r\n\r\n  const  m = [\r\n        {\r\n        lat: 51.505,\r\n        lng: -0.09,\r\n        zoom: 1,\r\n        zoomOffset: 1\r\n        },\r\n        {\r\n            lat: 20.505,\r\n            lng: -0.09,\r\n            zoom: 1,\r\n            zoomOffset: 1\r\n            },\r\n        ]\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Geo Tweet\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer        \r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n\r\n        <div className = \"DrawerHeader\">\r\n        <Typography variant=\"h6\" noWrap style ={{padding: \"25px\" , marginInlineEnd:\"45%\"}} >\r\n            Geo Tweet\r\n          </Typography>\r\n        <div className = \"DrawerButton\" >\r\n          <IconButton onClick={handleDrawerClose} style ={{color: \"white\"}}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n        <Container maxWidth=\"sm\">\r\n            <Grid\r\n                className = \"layer\"\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"flex-start\"\r\n            >\r\n\r\n        <TextField  id=\"standard-basic\" label=\"KeyWords\" onChange = {checkSearch} />\r\n        <FormGroup   className = \"switch\">   \r\n            <FormControlLabel\r\n                control={\r\n                <Switch \r\n                checked={state.checkedA} \r\n                onChange={handleChange} \r\n                name =\"checkedA\"\r\n                color = \"primary\" />}\r\n                label=\"Cluster Layer\" \r\n            />\r\n            <FormControlLabel\r\n                control={\r\n                <Switch \r\n                checked={state.checkedB}\r\n                onChange={handleChange}\r\n                name=\"checkedB\"\r\n                color=\"primary\"\r\n                />\r\n            }\r\n                label=\"Heatmap Layer\"\r\n            />\r\n        </FormGroup>   \r\n        </Grid>\r\n\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\">View</FormLabel>\r\n              <br></br>\r\n              <div className = \"gap\">\r\n                 <ToggleButtons></ToggleButtons>\r\n              </div>\r\n            </FormControl>\r\n        </Container>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button key = {'Show Statistics'} onClick = {handleModalOpen}>\r\n          <ListItemIcon><EqualizerIcon /></ListItemIcon>\r\n          <ListItemText primary={'Show Statistics'} />\r\n          </ListItem>\r\n          <ListItem button key = {'Contact Us'} onClick = {contactUsOpen}>\r\n          <ListItemIcon><MailIcon /></ListItemIcon>\r\n          <ListItemText primary={'Contact Us'} />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} style = {{marginTop: '4%'}} />\r\n        <Map />\r\n        \r\n      </main>\r\n      \r\n      <Modal  id = \"modal\" open={modalIsOpen} onClose ={handleModalClose}\r\n          // aria-labelledby=\"simple-modal-title\"\r\n          // aria-describedby=\"simple-modal-description\"\r\n  \r\n        >\r\n        {body}\r\n      </Modal>\r\n\r\n      <Modal  id = \"contactUsModal\" open={contactUsIsOpen} onClose ={contactUsClose}\r\n          // aria-labelledby=\"simple-modal-title\"\r\n          // aria-describedby=\"simple-modal-description\"\r\n  \r\n        >\r\n        {contactUsBody}\r\n      </Modal>\r\n\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Components\\Map.js",["92","93","94","95"],"import React, {Component} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {MapContainer, TileLayer, Marker, Popup} from 'react-leaflet';\r\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\r\nimport Markers from \"./Markers\";\r\nimport \"./../CSS/Drawer.css\"\r\nimport L from 'leaflet';\r\nimport \"leaflet.markercluster\";\r\n\r\nexport class Map extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props)\r\n     \r\n        this.state = {markers: [\r\n            {\r\n                Height : 0, \r\n                Width : 0,\r\n                text : 'fa fa bi fa ti na mi',\r\n                coordinates : [-79.9372, 32.7872] , \r\n\r\n              },\r\n              {\r\n                Height : 0, \r\n                Width : 0,\r\n                text : 'fa fa bi fa ti na mi',\r\n                coordinates : [-78.9372, 33.7872] , \r\n\r\n              }\r\n        ]};\r\n      }\r\n    componentWillMount(){\r\n            const bringTweets = async () => {\r\n              const res = await fetch( `http://127.0.0.1:5000/`,\r\n              {headers : { \r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'}        \r\n             }\r\n            );\r\n            const data = await res.json();\r\n            console.log(\"data:\", data[\"tweets\"]);\r\n            this.state.markers=data[\"tweets\"];\r\n            console.log(\"markers:\", this.state.markers);\r\n            }\r\n            bringTweets();\r\n\r\n            \r\n      }\r\n\r\n\r\n\r\n    render() {\r\n        const position = [30,35]\r\n        const h = window.innerHeight\r\n        const w = window.innerWidth\r\n        console.log(\"markers2:\", this.state.markers);\r\n        return (\r\n            <div  id = \"mapdiv\"\r\n             style={{\r\n                paddingBottom: \"50%\",\r\n                position: \"absolute\",\r\n            }}\r\n            >\r\n                <MapContainer  \r\n                 style={{\r\n                    height: h*0.80,\r\n                    width: w*0.99,\r\n                    paddingTop : \"10%\",\r\n                    position: \"initial\",\r\n                        outline: \"auto\",}}\r\n                center={position}\r\n                zoom={3}\r\n                zoomOffset={4}>\r\n                    <TileLayer\r\n                        attribution=\"&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> \"\r\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\r\n                        <MarkerClusterGroup>\r\n                        <Markers markersArr = {this.state.markers}></Markers>\r\n                        </MarkerClusterGroup>;\r\n                </MapContainer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Components\\Toggle.js",[],"C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Components\\Table.js",[],"C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Components\\Bars.js",[],"C:\\Users\\user\\Documents\\GitHub\\geoSocialApp\\geo-tweet\\src\\Components\\Markers.js",["96","97","98"],"import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport {Marker, Popup} from 'react-leaflet'\r\n\r\n  // const latRef = useRef(null);\r\n  // const LngRef = useRef(null);\r\n  // const zoomRef = useRef(null);\r\n  // const zoomOffRef = useRef(null);\r\n\r\n\r\n  // function createMarker(item) {\r\n  //   latRef.current = item.lat;\r\n  //   LngRef.current = item.lng;\r\n  //   zoomRef.current = item.zoom;\r\n  //   zoomOffRef.current = item.zoomOffset;\r\n  // }\r\nconst EventsCreator = (state) => {\r\n  const markers = state.markersArr.map((item) => {\r\n    if(item.coordinates){\r\n    const position = [item.coordinates[1], item.coordinates[0]]\r\n    const text=`\"`+ item.text +`\"`\r\n    const authur=item.author+\" says:\"\r\n\r\n    return (\r\n\r\n      <Marker position={position}>\r\n      <Popup>\r\n       {authur}\r\n          <br/>\r\n          {text}\r\n      </Popup>\r\n      </Marker>\r\n    )}\r\n  })\r\n\r\n  return(\r\n    <div>\r\n      {markers}\r\n    </div>\r\n  )\r\n\r\n\r\n}\r\n\r\nexport default EventsCreator;\r\n",{"ruleId":"99","severity":1,"message":"100","line":4,"column":9,"nodeType":"101","messageId":"102","endLine":4,"endColumn":12},{"ruleId":"99","severity":1,"message":"103","line":2,"column":24,"nodeType":"101","messageId":"102","endLine":2,"endColumn":33},{"ruleId":"99","severity":1,"message":"104","line":32,"column":10,"nodeType":"101","messageId":"102","endLine":32,"endColumn":16},{"ruleId":"99","severity":1,"message":"105","line":123,"column":10,"nodeType":"101","messageId":"102","endLine":123,"endColumn":11},{"ruleId":"99","severity":1,"message":"106","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":16},{"ruleId":"99","severity":1,"message":"104","line":3,"column":34,"nodeType":"101","messageId":"102","endLine":3,"endColumn":40},{"ruleId":"99","severity":1,"message":"107","line":3,"column":42,"nodeType":"101","messageId":"102","endLine":3,"endColumn":47},{"ruleId":"99","severity":1,"message":"108","line":1,"column":10,"nodeType":"101","messageId":"102","endLine":1,"endColumn":20},{"ruleId":"99","severity":1,"message":"106","line":3,"column":8,"nodeType":"101","messageId":"102","endLine":3,"endColumn":16},{"ruleId":"109","severity":1,"message":"110","line":20,"column":47,"nodeType":"111","messageId":"112","endLine":20,"endColumn":49},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"99","severity":1,"message":"100","line":4,"column":9,"nodeType":"101","messageId":"102","endLine":4,"endColumn":12},{"ruleId":"99","severity":1,"message":"103","line":2,"column":24,"nodeType":"101","messageId":"102","endLine":2,"endColumn":33},{"ruleId":"99","severity":1,"message":"117","line":2,"column":35,"nodeType":"101","messageId":"102","endLine":2,"endColumn":41},{"ruleId":"99","severity":1,"message":"104","line":32,"column":10,"nodeType":"101","messageId":"102","endLine":32,"endColumn":16},{"ruleId":"99","severity":1,"message":"118","line":36,"column":8,"nodeType":"101","messageId":"102","endLine":36,"endColumn":12},{"ruleId":"99","severity":1,"message":"119","line":46,"column":7,"nodeType":"101","messageId":"102","endLine":46,"endColumn":16},{"ruleId":"120","severity":1,"message":"121","line":235,"column":17,"nodeType":"122","messageId":"123","endLine":235,"endColumn":19},{"ruleId":"99","severity":1,"message":"105","line":296,"column":10,"nodeType":"101","messageId":"102","endLine":296,"endColumn":11},{"ruleId":"99","severity":1,"message":"106","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":16},{"ruleId":"99","severity":1,"message":"104","line":3,"column":34,"nodeType":"101","messageId":"102","endLine":3,"endColumn":40},{"ruleId":"99","severity":1,"message":"107","line":3,"column":42,"nodeType":"101","messageId":"102","endLine":3,"endColumn":47},{"ruleId":"99","severity":1,"message":"124","line":7,"column":8,"nodeType":"101","messageId":"102","endLine":7,"endColumn":9},{"ruleId":"99","severity":1,"message":"108","line":1,"column":10,"nodeType":"101","messageId":"102","endLine":1,"endColumn":20},{"ruleId":"99","severity":1,"message":"106","line":3,"column":8,"nodeType":"101","messageId":"102","endLine":3,"endColumn":16},{"ruleId":"109","severity":1,"message":"110","line":19,"column":47,"nodeType":"111","messageId":"112","endLine":19,"endColumn":49},"no-unused-vars","'Map' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Marker' is defined but never used.","'m' is assigned a value but never used.","'ReactDOM' is defined but never used.","'Popup' is defined but never used.","'Typography' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-native-reassign",["125"],"no-negated-in-lhs",["126"],"'useRef' is defined but never used.","'Bars' is defined but never used.","'useStyles' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'L' is defined but never used.","no-global-assign","no-unsafe-negation"]